{
	"camera" : 
	{
		"center" : "0.00000 0.00000 0.00000",
		"eye" : "0.00000 0.00000 1.00000",
		"up" : "0.00000 1.00000 0.00000"
	},
	"general" : 
	{
		"ambientcolor" : "0.30000 0.30000 0.30000",
		"bloom" : false,
		"bloomhdrfeather" : 0.1,
		"bloomhdriterations" : 8,
		"bloomhdrscatter" : 1.619,
		"bloomhdrstrength" : 2.0,
		"bloomhdrthreshold" : 1.0,
		"bloomstrength" : 2.0,
		"bloomthreshold" : 0.64999998,
		"bloomtint" : "1.00000 1.00000 1.00000",
		"camerafade" : true,
		"cameraparallax" : true,
		"cameraparallaxamount" : 0.1,
		"cameraparallaxdelay" : 2.0,
		"cameraparallaxmouseinfluence" : 0.1,
		"camerapreview" : true,
		"camerashake" : 
		{
			"user" : "camerashake",
			"value" : true
		},
		"camerashakeamplitude" : 1.0,
		"camerashakeroughness" : 1.0,
		"camerashakespeed" : 0.69999999,
		"clearcolor" : "0.70000 0.70000 0.70000",
		"clearenabled" : true,
		"farz" : 10000.0,
		"fov" : 50.0,
		"hdr" : false,
		"lightconfig" : 
		{
			"point" : 1,
			"tube" : 2
		},
		"nearz" : 0.0099999998,
		"orthogonalprojection" : 
		{
			"height" : 2160,
			"width" : 3840
		},
		"perspectiveoverridefov" : 95.0,
		"skylightcolor" : "0.30000 0.30000 0.30000",
		"zoom" : 1.05
	},
	"objects" : 
	[
		{
			"castshadow" : false,
			"color" : "0.06275 0.06275 0.06275",
			"id" : 59,
			"image" : "models/DDDDD.json",
			"locktransforms" : true,
			"name" : "DDDDD",
			"origin" : "1920.00000 1080.00000 0.00000",
			"parallaxDepth" : "-2.00000 -2.00000",
			"size" : "3840.00000 2160.00000"
		},
		{
			"id" : 118,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor",
					"value" : "1.00000 1.00000 1.00000"
				},
				"id" : 120,
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"origin" : "1921.29211 1885.30396 0.00000",
			"parallaxDepth" : "-2.00000 -2.00000",
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json",
			"scale" : "1.79355 1.79355 1.79355",
			"visible" : 
			{
				"user" : 
				{
					"condition" : "1",
					"name" : "circularparticles"
				},
				"value" : false
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 113,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor2",
					"value" : "1.00000 1.00000 1.00000"
				},
				"id" : 115,
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 118,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json",
			"scale" : "0.79265 0.79265 0.79265"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 160,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor3",
					"value" : "1.00000 1.00000 1.00000"
				},
				"id" : 162,
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 118,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 887,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor4",
					"value" : "1.00000 1.00000 1.00000"
				},
				"id" : 889,
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 118,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 930,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor5",
					"value" : "1.00000 1.00000 1.00000"
				},
				"id" : 932,
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 118,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json"
		},
		{
			"id" : 197,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"origin" : "1921.29211 1885.30396 0.00000",
			"parallaxDepth" : "-2.00000 -2.00000",
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json",
			"scale" : "-1.79355 1.79355 1.79355",
			"visible" : 
			{
				"user" : 
				{
					"condition" : "0",
					"name" : "circularparticles"
				},
				"value" : true
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 204,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor2",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 197,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json",
			"scale" : "0.79265 0.79265 0.79265"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 211,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor3",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 197,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 214,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor4",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 197,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 217,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor5",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 197,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json"
		},
		{
			"id" : 298,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"origin" : "1921.29211 1885.30396 0.00000",
			"parallaxDepth" : "-2.00000 -2.00000",
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json",
			"scale" : "1.79355 1.79355 1.79355",
			"visible" : 
			{
				"user" : 
				{
					"condition" : "2",
					"name" : "circularparticles"
				},
				"value" : false
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 301,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor2",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 298,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json",
			"scale" : "0.79265 0.79265 0.79265"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 304,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor3",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 298,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 307,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor4",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 298,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 310,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor5",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 298,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json"
		},
		{
			"id" : 283,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"origin" : "1921.29211 1885.30396 0.00000",
			"parallaxDepth" : "-2.00000 -2.00000",
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json",
			"scale" : "-1.79355 1.79355 1.79355",
			"visible" : 
			{
				"user" : 
				{
					"condition" : "2",
					"name" : "circularparticles"
				},
				"value" : false
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 286,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor2",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 283,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json",
			"scale" : "0.79265 0.79265 0.79265"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 289,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor3",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 283,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 292,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor4",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 283,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"id" : 295,
			"instanceoverride" : 
			{
				"colorn" : 
				{
					"user" : "starcolor5",
					"value" : "1.00000 1.00000 1.00000"
				},
				"rate" : 5.0
			},
			"name" : "Circular Particles",
			"parallaxDepth" : "-2.00000 -2.00000",
			"parent" : 283,
			"particle" : "particles/workshop/3098898533/new_particle_systemflat.json"
		},
		{
			"angles" : "-0.00000 -0.00000 -0.00597",
			"cascadedistance0" : 1152.0,
			"cascadedistance1" : 2304.0,
			"cascadedistance2" : 4224.0,
			"castshadow" : false,
			"color" : "1.00000 1.00000 1.00000",
			"density" : 2.0,
			"exponent" : 1.83,
			"id" : 156,
			"intensity" : 100.0,
			"light" : "lpoint",
			"name" : "",
			"origin" : "1919.53699 1723.71924 49.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"radius" : 524.38,
			"visible" : 
			{
				"user" : "blackhole",
				"value" : true
			},
			"volumetricsexponent" : 1.0
		},
		{
			"alpha" : 0.88,
			"castshadow" : false,
			"color" : "0.00000 0.00000 0.00000",
			"effects" : 
			[
				{
					"file" : "effects/blurprecise/effect.json",
					"id" : 322,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"scale" : "1.23 1.23"
							},
							"id" : 323
						},
						{
							"combos" : 
							{
								"ENABLEMASK" : 1,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "1.23 1.23"
							},
							"id" : 324
						}
					],
					"visible" : true
				}
			],
			"id" : 55,
			"image" : "models/planet-dark-black-moon-4k-fjbg_bg_fg.json",
			"locktransforms" : true,
			"name" : "moon",
			"origin" : "1920.00000 1886.31372 0.00000",
			"parallaxDepth" : "-2.00000 -2.00000",
			"size" : "180.00000 180.00000",
			"visible" : 
			{
				"user" : "blackhole",
				"value" : true
			}
		},
		{
			"alpha" : 5.0,
			"castshadow" : false,
			"effects" : 
			[
				{
					"file" : "effects/waterflow/effect.json",
					"id" : 475,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"phasescale" : 10,
								"speed" : 2,
								"strength" : 1
							},
							"id" : 476,
							"textures" : [ null, "masks/waterflow_mask_3d26e871", "effects/waterflowphase" ]
						}
					],
					"visible" : true
				}
			],
			"id" : 1806,
			"image" : "models/Sans_titre__2_-removebg-preview.json",
			"name" : "Sans_titre__2_-removebg-preview",
			"origin" : "1918.08752 1885.11499 0.00000",
			"parallaxDepth" : "-2.00000 -2.00000",
			"scale" : "0.59596 0.08141 1.00000",
			"size" : "350.00000 350.00000",
			"visible" : 
			{
				"user" : "blackhole",
				"value" : true
			}
		},
		{
			"angles" : "-0.00000 -0.00000 -0.00597",
			"cascadedistance0" : 1152.0,
			"cascadedistance1" : 2304.0,
			"cascadedistance2" : 4224.0,
			"castshadow" : false,
			"color" : "1.00000 1.00000 1.00000",
			"controlpoint" : "294.24268 2.43872 0.00000",
			"density" : 2.0,
			"exponent" : 1.83,
			"id" : 2067,
			"intensity" : 
			{
				"script" : "'use strict';\n\t\n/**\n * Configure these to control smoothing and the frequency.\n */\nconst FREQUENCY_RESOLUTION = 16; // Must be 16, 32 or 64 per channel.\nconst SOURCE_FREQUENCY = 0; // 0 means this script listen to bass / beat. 15 = treble frequencies.\n\nconst SMOOTHING = 16; // Lower values mean MORE smoothing\nconst MIN_VALUE = 1; // Lowest light intensity. Set to 0 if light is supposed to turn off when silent\nconst MAX_VALUE = 2; // Highest light intensity\n\nconst VALUE_DELTA = MAX_VALUE - MIN_VALUE;\n\n\n/**\n * This creates a permanent link to the audio response data.\n */\nlet audioBuffer = engine.registerAudioBuffers(FREQUENCY_RESOLUTION); // Adds the system audio levels to the code\nvar smoothValue = 0;\nvar initialValue;\n\n/**\n */\nexport function update() {\n\tlet audioDelta = audioBuffer.average[SOURCE_FREQUENCY] - smoothValue;\n\t\n\tsmoothValue += audioDelta * Math.min(1.0, engine.frametime * SMOOTHING);\n\tsmoothValue = Math.min(1.0, smoothValue);\n\n\treturn (initialValue * (smoothValue * VALUE_DELTA + MIN_VALUE)) / 2;\n}\n\n/**\n */\nexport function init(value) {\n\tinitialValue = value;\n}",
				"value" : 100.0
			},
			"light" : "ltube",
			"name" : "",
			"origin" : "1771.44299 1729.24329 8.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"radius" : 47.52,
			"visible" : 
			{
				"user" : "blackhole",
				"value" : true
			},
			"volumetricsexponent" : 1.0
		},
		{
			"angles" : "2.53073 0.00000 3.14159",
			"id" : 2004,
			"instanceoverride" : 
			{
				"colorn" : "1.00000 1.00000 1.00000",
				"count" : 0.5,
				"rate" : 0.25,
				"size" : 0.60000002
			},
			"name" : "Particles - Perspective",
			"origin" : "1904.85510 230.37917 -575.69641",
			"parallaxDepth" : "-1.42000 -1.35000",
			"particle" : "particles/workshop/2097947622/1.json",
			"scale" : "19.57593 19.57593 19.57593",
			"visible" : 
			{
				"user" : "gravitationalattraction",
				"value" : true
			}
		},
		{
			"angles" : "2.53073 0.00000 3.14159",
			"id" : 1385,
			"instanceoverride" : 
			{
				"colorn" : "1.00000 1.00000 1.00000",
				"count" : 0.5,
				"rate" : 0.25,
				"size" : 0.60000002
			},
			"name" : "Particles - Perspective",
			"origin" : "1904.85510 230.37917 -575.69641",
			"parallaxDepth" : "-1.42000 -1.35000",
			"particle" : "particles/workshop/2097947622/1.json",
			"scale" : "19.57593 19.57593 19.57593",
			"visible" : 
			{
				"user" : "gravitationalattraction",
				"value" : true
			}
		},
		{
			"castshadow" : false,
			"color" : "0.43137 0.43137 0.43137",
			"id" : 50,
			"image" : "models/planet-dark-black-moon-4k-fj_bg_fg.json",
			"locktransforms" : true,
			"name" : "Planet black",
			"origin" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.76219511,
								"y" : -0.0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.99903101,
								"y" : -22.446705
							},
							"frame" : 516,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 22.403202
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -85.825562
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.95533979,
								"y" : -17.495228
							},
							"frame" : 1031,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 15.932547
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 224.46704
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -1,
								"y" : -0.0
							},
							"frame" : 1500,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 0.72744906,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 89.126709
						}
					],
					"c1" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.76219511,
								"y" : -0.0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.99903101,
								"y" : 3.3009701
							},
							"frame" : 516,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : -3.2945728
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -95.728447
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.95533979,
								"y" : -8.5825558
							},
							"frame" : 1031,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 7.815959
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -33.009701
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -1,
								"y" : -0.0
							},
							"frame" : 1500,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 0.72744906,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : -9.9028902
						}
					],
					"c2" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.76219511,
								"y" : -0.0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.99903101,
								"y" : -0.0
							},
							"frame" : 516,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.95533979,
								"y" : -0.0
							},
							"frame" : 1031,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -1,
								"y" : -0.0
							},
							"frame" : 1500,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 0.72744906,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"options" : 
					{
						"fps" : 30,
						"length" : 1500,
						"mode" : "mirror",
						"wraploop" : null
					},
					"relative" : true
				},
				"value" : "1920.00000 390.96295 0.00000"
			},
			"parallaxDepth" : "-1.05000 -1.05000",
			"size" : "1022.00000 1017.00000",
			"visible" : 
			{
				"user" : "planetblack",
				"value" : true
			}
		},
		{
			"angles" : "2.53073 0.00000 3.14159",
			"id" : 412,
			"instanceoverride" : 
			{
				"colorn" : "1.00000 1.00000 1.00000",
				"count" : 0.5,
				"id" : 414,
				"rate" : 0.25,
				"size" : 0.60000002
			},
			"name" : "Particles - Perspective",
			"origin" : "1904.85510 230.37917 -575.69641",
			"parallaxDepth" : "-0.50000 -0.50000",
			"particle" : "particles/workshop/2097947622/1.json",
			"scale" : "19.57593 19.57593 19.57593",
			"visible" : 
			{
				"user" : "gravitationalattraction",
				"value" : true
			}
		},
		{
			"castshadow" : false,
			"effects" : 
			[
				{
					"file" : "effects/workshop/2788994425/radial_beams/effect.json",
					"id" : 707,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"Beams" : 14,
								"Center Size" : 1.89,
								"Colour Inner" : "1 1 1",
								"Colour Outer" : "1 1 1",
								"Opacity" : 0.090000004,
								"Smoothness" : 1.0,
								"Speed" : 0.0,
								"Thickness" : 1,
								"X Offset" : 0,
								"Y Offset" : 0.30000001
							},
							"id" : 708,
							"textures" : [ null, "masks/radial_beams_mask_eb04caaa" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/waterflow/effect.json",
					"id" : 1001,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"phasescale" : 0.0099999998,
								"speed" : 0.28,
								"strength" : 1
							},
							"id" : 1002,
							"textures" : [ null, "masks/waterflow_mask_62783896", "effects/waterflowphase" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/waterripple/effect.json",
					"id" : 1095,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"animationspeed" : 0.15000001,
								"ratio" : 1.0,
								"ripplestrength" : 0.1,
								"scale" : 1.0,
								"scrolldirection" : -0.052359879,
								"scrollspeed" : 0.0
							},
							"id" : 1096,
							"textures" : [ null, null, "effects/waterripplenormal" ]
						}
					],
					"visible" : true
				}
			],
			"id" : 705,
			"image" : "models/util/composelayer.json",
			"name" : "disintegration",
			"origin" : "1920.00000 1080.00000 0.00000",
			"parallaxDepth" : "-2.00000 -2.00000",
			"size" : "3840.00000 2160.00000",
			"visible" : 
			{
				"user" : "disintegration",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : "-0.00000 -0.00000 -0.01036",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"brightness" : 5.5599999,
			"castshadow" : false,
			"depthtest" : "enabled",
			"effects" : 
			[
				{
					"file" : "effects/workshop/3184554659/blurprecise/effect.json",
					"id" : 201,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"scale" : "0.43 0.43"
							},
							"id" : 202
						},
						{
							"combos" : 
							{
								"ENABLEMASK" : 1,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "0.43 0.43"
							},
							"id" : 203
						}
					],
					"visible" : true
				}
			],
			"font" : "fonts/spaceranger.ttf",
			"horizontalalign" : "center",
			"id" : 198,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "D a y",
			"opaquebackground" : false,
			"origin" : "3563.08545 1872.07239 0.00000",
			"padding" : 32,
			"parallaxDepth" : "0.00000 0.00000",
			"pointsize" : 36.0,
			"scale" : "0.90281 0.85878 0.75558",
			"size" : "173.00000 466.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3184554659';\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n\n\nexport var scriptProperties = createScriptProperties()\n  .addCombo({\n    name: 'monthFormat',\n    label: 'Month Format',\n    options: [{\n      label: 'Numeric',\n      value: '1'\n    }, {\n      label: 'Abbreviated',\n      value: '2'\n    }, {\n      label: 'Full',\n      value: '3'\n    }]\n  })\n  .addCombo({\n    name: 'dayFormat',\n    label: 'Day Format',\n    options: [{\n      label: 'Abbreviated',\n      value: '1'\n    }, {\n      label: 'Full',\n      value: '2'\n    }]\n  })\n  .addCheckbox({\n    name: 'showDay',\n    label: 'Show Day',\n    value: true\n  })\n  .addCheckbox({\n    name: 'alignVertical',\n    label: 'Align Day Vertically',\n    value: true\n  })\n  .addCheckbox({\n    name: 'useDelimiter',\n    label: 'Use Delimiter',\n    value: true\n  })\n  .addText({\n    name: 'addDelimiter',\n    label: 'Delimiter',\n    value: '/'\n  })\n  .finish();\n\n\nlet months;\nlet day;\nvar delimiterValue;\nvar nl;\n\n\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n  if (scriptProperties.useDelimiter == true) {\n    delimiterValue = scriptProperties.addDelimiter\n  }\n  if (scriptProperties.useDelimiter == false) {\n    delimiterValue = [\n      ' '\n    ]\n  }\n  if (scriptProperties.alignVertical == true) {\n    nl = ['\\n']\n  }\n  if (scriptProperties.alignVertical == false) {\n    nl = [' ']\n  }\n  if (scriptProperties.monthFormat == 1) {\n    months = [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '10',\n      '11',\n      '12'\n    ]\n  }\n  if (scriptProperties.monthFormat == 2) {\n    months = [\n      'JAN',\n      'FEB',\n      'MAR',\n      'APR',\n      'MAY',\n      'JUN',\n      'JUL',\n      'AUG',\n      'SEP',\n      'OCT',\n      'NOV',\n      'DEC'\n    ]\n  }\n  if (scriptProperties.monthFormat == 3) {\n    months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ]\n  }\n  if (scriptProperties.dayFormat == 1) {\n    day = [\n      'S' + nl + 'U' + nl + 'N',\n      'M' + nl + 'O' + nl + 'N',\n      'T' + nl + 'U' + nl + 'E',\n      'W' + nl + 'E' + nl + 'D',\n      'T' + nl + 'H' + nl + 'U',\n      'F' + nl + 'R' + nl + 'I',\n      'S' + nl + 'A' + nl + 'T'\n    ]\n  }\n  if (scriptProperties.dayFormat == 2) {\n    day = [\n      'S' + nl + 'U' + nl + 'N' + nl + 'D' + nl + 'A' + nl + 'Y',\n      'M' + nl + 'O' + nl + 'N' + nl + 'D' + nl + 'A' + nl + 'Y',\n      'T' + nl + 'U' + nl + 'E' + nl + 'S' + nl + 'D' + nl + 'A' + nl + 'Y',\n      'W' + nl + 'E' + nl + 'D' + nl + 'N' + nl + 'E' + nl + 'S' + nl + 'D' + nl + 'A' + nl + 'Y',\n      'T' + nl + 'H' + nl + 'U' + nl + 'R' + nl + 'S' + nl + 'D' + nl + 'A' + nl + 'Y',\n      'F' + nl + 'R' + nl + 'I' + nl + 'D' + nl + 'A' + nl + 'Y',\n      'S' + nl + 'A' + nl + 'T' + nl + 'U' + nl + 'R' + nl + 'D' + nl + 'A' + nl + 'Y'\n    ]\n  }\n  let date = new Date(); {\n    if (scriptProperties.showDay == true) {\n      return day[date.getDay()]\n    }\n    if (scriptProperties.showDay == false) {\n      return date.getDate() + delimiterValue + months[date.getMonth()] + delimiterValue + date.getFullYear();\n    }\n  }\n}\n",
				"scriptproperties" : 
				{
					"addDelimiter" : "/",
					"alignVertical" : true,
					"dayFormat" : "1",
					"monthFormat" : "1",
					"showDay" : true,
					"useDelimiter" : false
				},
				"value" : "S\nU\nN"
			},
			"verticalalign" : "center",
			"visible" : 
			{
				"user" : "daydatetime",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.01036",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"brightness" : 5.46,
			"castshadow" : false,
			"depthtest" : "enabled",
			"effects" : 
			[
				{
					"file" : "effects/workshop/3184554659/blurprecise/effect.json",
					"id" : 208,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"scale" : "1.33 1.33"
							},
							"id" : 209
						},
						{
							"combos" : 
							{
								"ENABLEMASK" : 1,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "1.33 1.33"
							},
							"id" : 210
						}
					],
					"visible" : true
				}
			],
			"font" : "fonts/spaceranger.ttf",
			"horizontalalign" : "center",
			"id" : 206,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Date",
			"opaquebackground" : false,
			"origin" : "-134.08601 -72.08160 0.00000",
			"padding" : 32,
			"parent" : 198,
			"pointsize" : 75.0,
			"scale" : "0.15484 0.15686 0.26144",
			"size" : "278.00000 3133.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3184554659';\n// Please note: Do not remove this line or asset references may break.\n// Please note: Do not remove this line or asset references may break.\n\n\nexport var scriptProperties = createScriptProperties()\n  .addCombo({\n    name: 'monthFormat',\n    label: 'Month Format',\n    options: [{\n      label: 'Numeric',\n      value: '1'\n    }, {\n      label: 'Abbreviated',\n      value: '2'\n    }, {\n      label: 'Full',\n      value: '3'\n    }]\n  })\n  .addCombo({\n    name: 'dayFormat',\n    label: 'Day Format',\n    options: [{\n      label: 'Abbreviated',\n      value: '1'\n    }, {\n      label: 'Full',\n      value: '2'\n    }]\n  })\n  .addCheckbox({\n    name: 'showDay',\n    label: 'Show Day',\n    value: false\n  })\n  .addCheckbox({\n    name: 'alignVertical',\n    label: 'Align Day Vertically',\n    value: true\n  })\n  .addCheckbox({\n    name: 'useDelimiter',\n    label: 'Use Delimiter',\n    value: false\n  })\n  .addText({\n    name: 'addDelimiter',\n    label: 'Delimiter',\n    value: '/'\n  })\n  .finish();\n\n\nlet months;\nlet day;\nlet dtt;\nlet year;\nvar delimiterValue;\nvar newLine;\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n  if (scriptProperties.useDelimiter == true) {\n    delimiterValue = scriptProperties.addDelimiter\n  }\n  if (scriptProperties.useDelimiter == false && scriptProperties.alignVertical == true) {\n    delimiterValue = [\n      '\\n\\n'\n    ]\n  }\n  if (scriptProperties.useDelimiter == false && scriptProperties.alignVertical == false) {\n    delimiterValue = [\n      ' '\n    ]\n  }\n  if (scriptProperties.alignVertical == true) {\n    newLine = [\n      '\\n'\n    ]\n  }\n  if (scriptProperties.alignVertical == false) {\n    newLine = [\n      ''\n    ]\n  }\n  if (scriptProperties.monthFormat == 1) {\n    months = [\n      '0' + newLine + '1',\n      '0' + newLine + '2',\n      '0' + newLine + '3',\n      '0' + newLine + '4',\n      '0' + newLine + '5',\n      '0' + newLine + '6',\n      '0' + newLine + '7',\n      '0' + newLine + '8',\n      '0' + newLine + '9',\n      '1' + newLine + '0',\n      '1' + newLine + '1',\n      '1' + newLine + '2'\n    ]\n  }\n  if (scriptProperties.monthFormat == 2) {\n    months = [\n      'J' + newLine + 'A' + newLine + 'N',\n      'F' + newLine + 'E' + newLine + 'B',\n      'M' + newLine + 'A' + newLine + 'R',\n      'A' + newLine + 'P' + newLine + 'R',\n      'M' + newLine + 'A' + newLine + 'Y',\n      'J' + newLine + 'U' + newLine + 'N',\n      'J' + newLine + 'U' + newLine + 'L',\n      'A' + newLine + 'U' + newLine + 'G',\n      'S' + newLine + 'E' + newLine + 'P',\n      'O' + newLine + 'C' + newLine + 'T',\n      'N' + newLine + 'O' + newLine + 'V',\n      'D' + newLine + 'E' + newLine + 'C'\n    ]\n  }\n  if (scriptProperties.monthFormat == 3) {\n    months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ]\n  }\n  if (scriptProperties.dayFormat == 1) {\n    day = [\n      'S' + newLine + 'u' + newLine + 'n',\n      'M' + newLine + 'o' + newLine + 'n',\n      'T' + newLine + 'u' + newLine + 'e',\n      'W' + newLine + 'e' + newLine + 'd',\n      'T' + newLine + 'h' + newLine + 'u',\n      'F' + newLine + 'r' + newLine + 'i',\n      'S' + newLine + 'a' + newLine + 't'\n    ]\n  }\n  if (scriptProperties.dayFormat == 2) {\n    day = [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday'\n    ]\n  }\n  if (scriptProperties.alignVertical == true || scriptProperties.alignVertical == false) {\n    dtt = [\n      '',\n      '0' + newLine + '1',\n      '0' + newLine + '2',\n      '0' + newLine + '3',\n      '0' + newLine + '4',\n      '0' + newLine + '5',\n      '0' + newLine + '6',\n      '0' + newLine + '7',\n      '0' + newLine + '8',\n      '0' + newLine + '9',\n      '1' + newLine + '0',\n      '1' + newLine + '1',\n      '1' + newLine + '2',\n      '1' + newLine + '3',\n      '1' + newLine + '4',\n      '1' + newLine + '5',\n      '1' + newLine + '6',\n      '1' + newLine + '7',\n      '1' + newLine + '8',\n      '1' + newLine + '9',\n      '2' + newLine + '0',\n      '2' + newLine + '1',\n      '2' + newLine + '2',\n      '2' + newLine + '3',\n      '2' + newLine + '4',\n      '2' + newLine + '5',\n      '2' + newLine + '6',\n      '2' + newLine + '7',\n      '2' + newLine + '8',\n      '2' + newLine + '9',\n      '3' + newLine + '0',\n      '3' + newLine + '1'\n    ]\n  }\n\n  let date = new Date(); {\n    var yearold = date.getFullYear() + \"\"\n    if (scriptProperties.alignVertical == true || scriptProperties.alignVertical == false) {\n      var yearnew = yearold.split('');\n      year = yearnew[0] + newLine + yearnew[1] + newLine + yearnew[2] + newLine + yearnew[3];\n    }\n    if (scriptProperties.showDay == true) {\n      return day[date.getDay()] + delimiterValue + dtt[date.getDate()] + delimiterValue + months[date.getMonth()] + delimiterValue + year;\n    }\n    if (scriptProperties.showDay == false) {\n      return dtt[date.getDate()] + delimiterValue + months[date.getMonth()] + delimiterValue + year;\n    }\n  }\n}\n",
				"scriptproperties" : 
				{
					"addDelimiter" : "",
					"alignVertical" : true,
					"dayFormat" : "1",
					"monthFormat" : "2",
					"showDay" : false,
					"useDelimiter" : false
				},
				"value" : "1\n5\n\nN\nO\nV\n\n2\n0\n2\n3"
			},
			"verticalalign" : "center"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.01036",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"brightness" : 6.2399998,
			"castshadow" : false,
			"depthtest" : "enabled",
			"effects" : 
			[
				{
					"file" : "effects/workshop/3184554659/blurprecise/effect.json",
					"id" : 193,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"scale" : "1.28 1.28"
							},
							"id" : 194
						},
						{
							"combos" : 
							{
								"ENABLEMASK" : 1,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "1.28 1.28"
							},
							"id" : 195
						}
					],
					"visible" : true
				}
			],
			"font" : "fonts/spaceranger.ttf",
			"horizontalalign" : "center",
			"id" : 191,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Clock",
			"opaquebackground" : false,
			"origin" : "-6.51699 -291.01907 0.00000",
			"padding" : 32,
			"parent" : 198,
			"pointsize" : 34.0,
			"scale" : "0.29269 0.30769 0.34972",
			"size" : "420.00000 191.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3184554659';\n// Please note: Do not remove this line or asset references may break.\n\nexport var scriptProperties = createScriptProperties()\n\t// Whether you want a 24h or 12h style format\n\t.addCheckbox({\n\t\tname: 'use24hFormat',\n\t\tlabel: 'ui_editor_properties_use_24h_format',\n\t\tvalue: true\n\t})\n\t// Whether you want to see the seconds or not\n\t.addCheckbox({\n\t\tname: 'showSeconds',\n\t\tlabel: 'ui_editor_properties_show_seconds',\n\t\tvalue: false\n\t})\n\t// This will be used to separate each element\n\t.addText({\n\t\tname: 'delimiter',\n\t\tlabel: 'ui_editor_properties_delimiter',\n\t\tvalue: ':'\n\t})\n\t.finish();\n\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n\tlet time = new Date();\n\tvar hours = time.getHours();\n\tif (!scriptProperties.use24hFormat) {\n\t\thours %= 12;\n\t\tif (hours == 0) {\n\t\t\thours = 12;\n\t\t}\n\t}\n\thours = (\"00\" + hours).slice(-2);\n\tlet minutes = (\"00\" + time.getMinutes()).slice(-2);\n\tvalue = hours + scriptProperties.delimiter + minutes;\n\tif (scriptProperties.showSeconds) {\n\t\tlet seconds = (\"00\" + time.getSeconds()).slice(-2);\n\t\tvalue += scriptProperties.delimiter + seconds;\n\t}\n\treturn value;\n}\n",
				"scriptproperties" : 
				{
					"delimiter" : ":",
					"showSeconds" : false,
					"use24hFormat" : true
				},
				"value" : "12:34"
			},
			"verticalalign" : "center",
			"visible" : 
			{
				"user" : 
				{
					"condition" : "0",
					"name" : "clock"
				},
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.01036",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"brightness" : 6.2399998,
			"castshadow" : false,
			"depthtest" : "enabled",
			"effects" : 
			[
				{
					"file" : "effects/workshop/3184554659/blurprecise/effect.json",
					"id" : 1625,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"scale" : "1.28 1.28"
							},
							"id" : 1626
						},
						{
							"combos" : 
							{
								"ENABLEMASK" : 1,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "1.28 1.28"
							},
							"id" : 1627
						}
					],
					"visible" : true
				}
			],
			"font" : "fonts/spaceranger.ttf",
			"horizontalalign" : "center",
			"id" : 1624,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Clock",
			"opaquebackground" : false,
			"origin" : "-6.51699 -291.01907 0.00000",
			"padding" : 32,
			"parent" : 198,
			"pointsize" : 34.0,
			"scale" : "0.29269 0.30769 0.34972",
			"size" : "420.00000 191.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3184554659';\n// Please note: Do not remove this line or asset references may break.\n\nexport var scriptProperties = createScriptProperties()\n\t// Whether you want a 24h or 12h style format\n\t.addCheckbox({\n\t\tname: 'use24hFormat',\n\t\tlabel: 'ui_editor_properties_use_24h_format',\n\t\tvalue: true\n\t})\n\t// Whether you want to see the seconds or not\n\t.addCheckbox({\n\t\tname: 'showSeconds',\n\t\tlabel: 'ui_editor_properties_show_seconds',\n\t\tvalue: false\n\t})\n\t// This will be used to separate each element\n\t.addText({\n\t\tname: 'delimiter',\n\t\tlabel: 'ui_editor_properties_delimiter',\n\t\tvalue: ':'\n\t})\n\t.finish();\n\n/**\n * @param {String} value (for property 'text')\n */\nexport function update(value) {\n\tlet time = new Date();\n\tvar hours = time.getHours();\n\tif (!scriptProperties.use24hFormat) {\n\t\thours %= 12;\n\t\tif (hours == 0) {\n\t\t\thours = 12;\n\t\t}\n\t}\n\thours = (\"00\" + hours).slice(-2);\n\tlet minutes = (\"00\" + time.getMinutes()).slice(-2);\n\tvalue = hours + scriptProperties.delimiter + minutes;\n\tif (scriptProperties.showSeconds) {\n\t\tlet seconds = (\"00\" + time.getSeconds()).slice(-2);\n\t\tvalue += scriptProperties.delimiter + seconds;\n\t}\n\treturn value;\n}\n",
				"scriptproperties" : 
				{
					"delimiter" : ":",
					"showSeconds" : false,
					"use24hFormat" : false
				},
				"value" : "12:34"
			},
			"verticalalign" : "center",
			"visible" : 
			{
				"user" : 
				{
					"condition" : "1",
					"name" : "clock"
				},
				"value" : false
			}
		},
		{
			"angles" : "-0.00000 -0.00000 -0.00597",
			"cascadedistance0" : 1152.0,
			"cascadedistance1" : 2304.0,
			"cascadedistance2" : 4224.0,
			"castshadow" : false,
			"color" : "1.00000 1.00000 1.00000",
			"controlpoint" : "4445.27393 12.14673 0.00000",
			"density" : 2.0,
			"exponent" : 4.0,
			"id" : 61,
			"intensity" : 
			{
				"script" : "'use strict';\n\t\n/**\n * Configure these to control smoothing and the frequency.\n */\nconst FREQUENCY_RESOLUTION = 16; // Must be 16, 32 or 64 per channel.\nconst SOURCE_FREQUENCY = 0; // 0 means this script listen to bass / beat. 15 = treble frequencies.\n\nconst SMOOTHING = 16; // Lower values mean MORE smoothing\nconst MIN_VALUE = 1; // Lowest light intensity. Set to 0 if light is supposed to turn off when silent\nconst MAX_VALUE = 2; // Highest light intensity\n\nconst VALUE_DELTA = MAX_VALUE - MIN_VALUE;\n\n\n/**\n * This creates a permanent link to the audio response data.\n */\nlet audioBuffer = engine.registerAudioBuffers(FREQUENCY_RESOLUTION); // Adds the system audio levels to the code\nvar smoothValue = 0;\nvar initialValue;\n\n/**\n */\nexport function update() {\n\tlet audioDelta = audioBuffer.average[SOURCE_FREQUENCY] - smoothValue;\n\t\n\tsmoothValue += audioDelta * Math.min(1.0, engine.frametime * SMOOTHING);\n\tsmoothValue = Math.min(1.0, smoothValue);\n\n\treturn (initialValue * (smoothValue * VALUE_DELTA + MIN_VALUE)) / 2;\n}\n\n/**\n */\nexport function init(value) {\n\tinitialValue = value;\n}",
				"value" : 25.0
			},
			"light" : "ltube",
			"name" : "",
			"origin" : "-548.53198 19.63745 207.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"radius" : 625.34003,
			"visible" : 
			{
				"user" : "plain",
				"value" : true
			},
			"volumetricsexponent" : 1.0
		},
		{
			"castshadow" : false,
			"effects" : 
			[
				{
					"file" : "effects/depthparallax/effect.json",
					"id" : 109,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"center" : 0.51999998,
								"scale" : "1 0.0099999998",
								"sens" : 1.15
							},
							"id" : 110
						}
					],
					"visible" : true
				}
			],
			"id" : 45,
			"image" : "models/planet-dark-black-moon-4k-fj_fg.json",
			"locktransforms" : true,
			"name" : "Dark",
			"origin" : "1920.00000 205.77136 0.00000",
			"parallaxDepth" : "2.00000 0.40000",
			"size" : "3840.00000 315.00000",
			"visible" : 
			{
				"user" : "plain",
				"value" : true
			}
		},
		{
			"alpha" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -1,
								"y" : -0.0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -1,
								"y" : -0.0
							},
							"frame" : 45,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1
						},
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -1,
								"y" : -0.0
							},
							"frame" : 90,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"options" : 
					{
						"fps" : 30,
						"length" : 90,
						"mode" : "single",
						"wraploop" : null
					}
				},
				"value" : 0.0
			},
			"anchor" : "none",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"depthtest" : "enabled",
			"effects" : 
			[
				{
					"file" : "effects/blurprecise/effect.json",
					"id" : 755,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"scale" : "0.48 0.48"
							},
							"id" : 756
						},
						{
							"combos" : 
							{
								"ENABLEMASK" : 1,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "0.48 0.48"
							},
							"id" : 757
						}
					],
					"visible" : true
				}
			],
			"font" : "fonts/airstrikelaser.ttf",
			"horizontalalign" : "center",
			"id" : 142,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "",
			"opaquebackground" : false,
			"origin" : "1920.00000 1080.00000 0.00000",
			"padding" : 32,
			"parallaxDepth" : "0.00000 0.00000",
			"pointsize" : 50.0,
			"size" : "1218.00000 246.00000",
			"text" : "NorthWay.",
			"verticalalign" : "center",
			"visible" : 
			{
				"user" : "intro",
				"value" : true
			}
		},
		{
			"alpha" : 0.0,
			"castshadow" : false,
			"id" : 447,
			"image" : "models/util/solidlayer.json",
			"name" : "Media Info (ROUND)",
			"origin" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport var scriptProperties = createScriptProperties()\n    .addCheckbox({\n        name: 'isMovable',\n        label: 'Is movable',\n        value: false\n    })\n    .finish();\n\nconst storageName = \"storedPosRoundMIC\";\nlet isDragging = false, dragOffset, timer;\n\nexport function cursorDown(event) {\n    timer = Date.now();\n    isDragging = true;\n    dragOffset = thisLayer.origin.subtract(event.worldPosition);\n}\n\nexport function cursorUp(event) {\n    isDragging = false;\n    localStorage.set(storageName, thisLayer.origin);\n}\n\nexport function cursorMove(event) {\n    const overClick = Date.now() - timer > 50;\n    if (!overClick) dragOffset = thisLayer.origin.subtract(event.worldPosition);\n\n    if (isDragging && scriptProperties.isMovable && shared.miDragable && overClick) {\n        thisLayer.origin = event.worldPosition.add(dragOffset);\n    }\n}\n\nexport function init() {\n    shared.miDragable = localStorage.get(\"miDragable\");\n    shared.miDragable = shared.miDragable == undefined ? scriptProperties.isMovable : shared.miDragable;\n    return localStorage.get(storageName) || thisLayer.origin;\n} \n",
				"scriptproperties" : 
				{
					"isMovable" : true
				},
				"value" : "3618.36792 1080.00000 0.00000"
			},
			"parallaxDepth" : "0.00000 0.00000",
			"scale" : "0.40000 0.40000 0.40000",
			"size" : "512.00000 512.00000",
			"visible" : 
			{
				"user" : "musicplayer",
				"value" : false
			}
		},
		{
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'dur',\n\t\tlabel: 'Transition duration',\n\t\tvalue: 1,\n\t\tmin: 0,\n\t\tmax: 2,\n\t\tinteger: false\n\t})\n\t.finish();\n\nlet timer, oldColor = new Vec3(0), newColor = new Vec3(0);\n\nexport function update() {\n\tvar color = newColor;\n\n\tif (timer < scriptProperties.dur) {\n\t\tcolor = oldColor.mix(newColor, timer / scriptProperties.dur);\n\t\ttimer += engine.frametime;\n\t\tshared.miPrimaryColor = color;\n\t}\n\n\treturn color;\n}\n\nexport function mediaThumbnailChanged(event) {\n\ttimer = 0;\n\toldColor = newColor;\n\tnewColor = event.primaryColor;\n\tshared.miPrimaryColor = newColor;\n}\n\nexport function init() {\n\tshared.miPrimaryColor = newColor;\n}\n",
				"scriptproperties" : 
				{
					"dur" : 1
				},
				"value" : "0.48235 0.12941 0.12941"
			},
			"id" : 448,
			"image" : "models/workshop/3219510589/corner5.json",
			"name" : "Holder (hide before publish)",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 447,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n    .addCheckbox({\n        name: 'media',\n        label: 'Media Based Detection',\n        value: true\n    })\n    .addCheckbox({\n        name: 'invert',\n        label: 'Invert',\n        value: false\n\t})\n    .addSlider({\n        name: 'min',\n        label: 'Min value',\n        value: 0.75,\n        min: 0,\n        max: 1,\n        integer: false\n    })\n    .addSlider({\n        name: 'max',\n        label: 'Max value',\n        value: 1,\n        min: 0,\n        max: 1,\n        integer: false\n    })\n    .addSlider({\n        name: 'timerIn',\n        label: 'Fade in timer',\n        value: 0.05,\n        min: 0,\n        max: 10,\n        integer: false\n    })\n    .addSlider({\n        name: 'timerOut',\n        label: 'Fade out timer',\n        value: 1.25,\n        min: 0,\n        max: 10,\n        integer: false\n    })\n    .addSlider({\n        name: 'fadeInDur',\n        label: 'Fade in duration',\n        value: 0.25,\n        min: 0,\n        max: 2,\n        integer: false\n    })\n    .addSlider({\n        name: 'fadeOutDur',\n        label: 'Fade out duration',\n        value: 0.2,\n        min: 0,\n        max: 2,\n        integer: false\n    })\n    .finish();\n\nconst vecToggles = new Vec3(1, 1, 1); //1 enabled, 0 disabled\nconst audioBuffer = engine.registerAudioBuffers(16);\nlet state, oldState, target, dur = 0, isVector, stopTimeout, oldSettings = false, cursor, oldCursor = false;\n\nexport function update(value) {\n\tif (oldState == undefined) {\n\t\toldState = state;\n\t\ttarget = (state && shared.miTextPos != 3) ^ scriptProperties.invert ? scriptProperties.max : scriptProperties.min;\n\t\treturn target = isVector ? lerp(value, new Vec3(target), vecToggles) : target;\n\t}\n\n    if (!scriptProperties.media) state = !!audioBuffer.average.reduce((a, b) => a + b) ^ scriptProperties.invert;\n    cursor = shared.miCursorIn ^ scriptProperties.invert;\n\n    if (oldState != state || shared.miSettingsOpen != oldSettings || cursor != oldCursor){\n        if (stopTimeout) stopTimeout();\n        oldState = state;\n\n        let fadeDur, targ, timer;\n\n        if (state && shared.miTextPos != 3 || shared.miSettingsOpen || cursor && shared.miTextPos == 3 && state) {\n            timer = scriptProperties.timerIn;\n            fadeDur = scriptProperties.fadeInDur;\n            targ = scriptProperties.max;\n        } else {\n            timer = scriptProperties.timerOut;\n            fadeDur = scriptProperties.fadeOutDur;\n            targ = scriptProperties.min;\n        }\n        if (shared.miSettingsOpen != oldSettings) {\n            timer = 0;\n            fadeDur = shared.miSettingsOpenSpeed;\n        }\n\n        stopTimeout = engine.setTimeout(() => {setTarget(targ, fadeDur)}, timer * 1000);\n\n        oldCursor = cursor;\n        oldSettings = shared.miSettingsOpen;\n    }\n\n    return lerp(value, target, dur);\n}\n\nfunction setTarget(targ, fadeDur) {\n    target = isVector ? new Vec3(targ) : targ;\n\tdur = engine.frametime / Math.max(0.0001, fadeDur);\n    dur = isVector ? vecToggles.multiply(dur) : dur;\n}\n\nfunction lerp(a, b, value) {\n    if (isVector) {\n        const x = WEMath.mix(a.x, b.x, value.x);\n        const y = WEMath.mix(a.y, b.y, value.y);\n        const z = WEMath.mix(a.z, b.z, value.z);\n        return new Vec3(x, y, z);\n    }\n    return WEMath.mix(a, b, value);\n}\n\nexport function init(value) {\n\tisVector = value.hasOwnProperty(\"x\");\n\tdur = isVector ? new Vec3(dur) : dur;\n    shared.miCursorIn = false;\n\n    if (!scriptProperties.media) {\n\t\tstate = !!audioBuffer.average.reduce((a, b) => a + b) ^ scriptProperties.invert;\n\t\ttarget = state ? scriptProperties.max : scriptProperties.min;\n    \treturn target = isVector ? lerp(value, new Vec3(target), vecToggles) : target;\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n    if (scriptProperties.media) state = event.state == 1 ^ scriptProperties.invert;\n}\n\nexport function cursorEnter(event) {\n\tshared.miCursorIn = true;\n}\n\nexport function cursorLeave(event) {\n\tshared.miCursorIn = false;\n}\n",
				"scriptproperties" : 
				{
					"fadeInDur" : 0.25,
					"fadeOutDur" : 0.2,
					"invert" : false,
					"max" : 1,
					"media" : true,
					"min" : 0.69999999,
					"timerIn" : 0.050000001,
					"timerOut" : 1.25
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "512.00000 512.00000",
			"visible" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\n/**\n * @param {MediaPlaybackEvent} event\n */\nexport function mediaPlaybackChanged(event) {\n\tthisLayer.visible = event.state !== MediaPlaybackEvent.PLAYBACK_STOPPED;\n}\n",
				"value" : false
			}
		},
		{
			"alpha" : 0.69999999,
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n\treturn shared.miPrimaryColor;\n}\n",
				"value" : "0.48235 0.12941 0.12941"
			},
			"id" : 449,
			"image" : "models/workshop/3219510589/corner5.json",
			"name" : "Clock Container",
			"origin" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n    .addCheckbox({\n        name: 'enabled',\n        label: 'Enabled',\n        value: true\n    })\n    .addCheckbox({\n        name: 'media',\n        label: 'Media based detection',\n        value: true\n    })\n    .addCheckbox({\n\t\tname: 'invert',\n\t\tlabel: 'Invert',\n\t\tvalue: false\n\t})\n    .addSlider({\n        name: 'min',\n        label: 'Min value',\n        value: 0,\n        min: 0,\n        max: 1,\n        integer: false\n    })\n    .addSlider({\n        name: 'max',\n        label: 'Max value',\n        value: 1,\n        min: 0,\n        max: 1,\n        integer: false\n    })\n    .addSlider({\n        name: 'timerIn',\n        label: 'Fade in timer',\n        value: 0.5,\n        min: 0,\n        max: 10,\n        integer: false\n    })\n    .addSlider({\n        name: 'timerOut',\n        label: 'Fade out timer',\n        value: 0.5,\n        min: 0,\n        max: 10,\n        integer: false\n    })\n    .addSlider({\n        name: 'fadeInDur',\n        label: 'Fade in duration',\n        value: 0.155,\n        min: 0,\n        max: 2,\n        integer: false\n    })\n    .addSlider({\n        name: 'fadeOutDur',\n        label: 'Fade out duration',\n        value: 0.2,\n        min: 0,\n        max: 2,\n        integer: false\n    })\n    .addSlider({\n        name: 'timerSwitch',\n        label: 'Flip timer',\n        value: 0.08,\n        min: 0,\n        max: 10,\n        integer: false\n    })\n    .addSlider({\n        name: 'switchDur',\n        label: 'Flip duration',\n        value: 0.125,\n        min: 0,\n        max: 2,\n        integer: false\n    })\n    .finish();\n\nconst vecToggles = new Vec3(0, 1, 0); //1 enabled, 0 disabled\nconst audioBuffer = engine.registerAudioBuffers(16);\nlet state, oldState, target, dur = 0, isVector, stopTimeout, pos, oldPos, flip, mediaState = 0, oldSettings = false, oldClockOrientation = 2, oldShowClock = 2, parent, cursor, oldCursor = false;\n\nexport function update(value) {\n\tif (oldState == undefined) {\n        oldState = state;\n        target = (!state && shared.miTextPos != 3 && shared.miShowClock == 2) ^ scriptProperties.invert ? scriptProperties.max : scriptProperties.min;\n        target = shared.miClockPos == 1 || shared.miClockPos == 2 && oldPos ? target : -target;\n        return target = isVector ? lerp(value, new Vec3(target), vecToggles) : target;\n    }\n\n    pos = parent.getTransformMatrix().m[13] > engine.canvasSize.y / 2;\n    state = scriptProperties.media ? mediaState : !!audioBuffer.average.reduce((a, b) => a + b);\n    state = (!scriptProperties.enabled || state) ^ scriptProperties.invert ^ !scriptProperties.enabled;\n    state = (shared.miShowClock == 1 || state) && shared.miShowClock;\n    cursor = shared.miCursorIn ^ scriptProperties.invert;\n\n    flip = pos != oldPos;\n    const settings = shared.miSettingsOpen != oldSettings;\n    const orientation = shared.miClockPos != oldClockOrientation;\n    const toggle = shared.miShowClock != oldShowClock;\n    const cursorChange = cursor != oldCursor;\n\n    if (oldState != state || flip || settings || orientation || toggle || cursorChange){\n        if (stopTimeout) stopTimeout();\n        oldState = state;\n        \n        let fadeDur, targ, timer;\n        if ((state && shared.miTextPos != 3 || shared.miSettingsOpen || (cursor || state) && shared.miTextPos == 3 && !shared.miSettingsOpen) && shared.miShowClock || shared.miShowClock == 1) {\n            timer = flip ? scriptProperties.timerSwitch : scriptProperties.timerIn;\n            fadeDur = scriptProperties.fadeInDur;\n            targ = scriptProperties.max;\n        } else {\n            timer = flip ? scriptProperties.timerSwitch : scriptProperties.timerOut;\n            fadeDur = scriptProperties.fadeOutDur;\n            targ = scriptProperties.min;\n        }\n        if (settings || orientation || toggle || cursorChange) {\n            timer = !cursor ^ scriptProperties.invert && cursorChange ? scriptProperties.timerOut : 0;\n            fadeDur = !cursor ^ scriptProperties.invert && cursorChange ? scriptProperties.fadeOutDur : shared.miSettingsOpenSpeed;\n        }\n\n        stopTimeout = engine.setTimeout(() => {setTarget(targ, fadeDur)}, timer * 1000);\n\t\t\n        oldCursor = cursor;\n        oldShowClock = shared.miShowClock;\n\t\toldClockOrientation = shared.miClockPos;\n        oldSettings = shared.miSettingsOpen;\n        oldPos = pos;\n    }\n\n    return lerp(value, target, dur);\n}\n\nfunction setTarget(targ, fadeDur) {\n    target = shared.miClockPos == 1 || shared.miClockPos == 2 && pos ? targ : -targ;\n    target = isVector ? new Vec3(target) : target;\n\tdur = engine.frametime / Math.max(0.0001, flip ? scriptProperties.switchDur : fadeDur);\n    dur = isVector ? vecToggles.multiply(dur) : dur;\n}\n\nfunction lerp(a, b, value) {\n    if (isVector) {\n        const x = WEMath.mix(a.x, b.x, value.x);\n        const y = WEMath.mix(a.y, b.y, value.y);\n        const z = WEMath.mix(a.z, b.z, value.z);\n        return new Vec3(x, y, z);\n    }\n    return WEMath.mix(a, b, value);\n}\n\nexport function init(value) {\n\tisVector = value.hasOwnProperty(\"x\");\n\tdur = isVector ? new Vec3(dur) : dur;\n    oldPos = thisLayer.getTransformMatrix().m[13] > engine.canvasSize.y / 2;\n    shared.miTextContainerScale = value;\n    parent = thisLayer.getParent();\n    shared.miShowClock = localStorage.get(\"miShowClock\");\n    shared.miShowClock = shared.miShowClock == undefined ? scriptProperties.enabled * 2 : shared.miShowClock;\n    shared.miClockPos = localStorage.get(\"miClockPos\");\n    shared.miClockPos = shared.miClockPos == undefined ? 2 : shared.miClockPos;\n\n    if (!scriptProperties.media) state = !!audioBuffer.average.reduce((a, b) => a + b) ^ scriptProperties.invert;\n}\n\nexport function mediaPlaybackChanged(event) {\n    mediaState = event.state == 1;\n    if (oldState == undefined && scriptProperties.media) state = mediaState ^ scriptProperties.invert;\n}\n",
				"scriptproperties" : 
				{
					"enabled" : true,
					"fadeInDur" : 0.25,
					"fadeOutDur" : 0.075000003,
					"invert" : true,
					"max" : -182,
					"media" : true,
					"min" : 0,
					"switchDur" : 0.125,
					"timerIn" : 1.25,
					"timerOut" : 0.050000001,
					"timerSwitch" : 0.079999998
				},
				"value" : "0.00000 -182.00000 0.00000"
			},
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 448,
			"size" : "512.00000 512.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.00000 0.00000 0.00000",
			"blockalign" : false,
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n\treturn shared.miTextColor;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"depthtest" : "enabled",
			"font" : "fonts/workshop/3219510589/LEMONMILK-Bold.otf",
			"horizontalalign" : "center",
			"id" : 450,
			"limitrows" : false,
			"limituseellipsis" : false,
			"limitwidth" : false,
			"maxrows" : 1,
			"maxwidth" : 500.0,
			"name" : "Clock",
			"opaquebackground" : false,
			"origin" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet initValue, parent;\n\nexport function update(value) {\n\tvalue.y = initValue.y * Math.sign(-parent.origin.y);\n\tthisLayer.verticalalign = parent.origin.y < 0 ? \"top\" : \"bottom\";\n\treturn value;\n}\n\nexport function init(value) {\n\tinitValue = value;\n\tparent = thisLayer.getParent();\n}\n",
				"value" : "0.00000 -66.00000 0.00000"
			},
			"padding" : 32,
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 449,
			"pointsize" : 32.0,
			"size" : "373.00000 180.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport var scriptProperties = createScriptProperties()\n\t.addCheckbox({\n\t\tname: 'use24hFormat',\n\t\tlabel: 'ui_editor_properties_use_24h_format',\n\t\tvalue: true\n\t})\n\t.addCheckbox({\n\t\tname: 'showSeconds',\n\t\tlabel: 'ui_editor_properties_show_seconds',\n\t\tvalue: false\n\t})\n\t.addText({\n\t\tname: 'delimiter',\n\t\tlabel: 'ui_editor_properties_delimiter',\n\t\tvalue: ':'\n\t})\n\t.finish();\n\nexport function update(value) {\n\tlet time = new Date();\n\tvar hours = time.getHours();\n\tif (!scriptProperties.use24hFormat) {\n\t\thours %= 12;\n\t\tif (hours == 0) {\n\t\t\thours = 12;\n\t\t}\n\t}\n\thours = (\"00\" + hours).slice(-2);\n\tlet minutes = (\"00\" + time.getMinutes()).slice(-2);\n\tvalue = hours + scriptProperties.delimiter + minutes;\n\tif (scriptProperties.showSeconds) {\n\t\tlet seconds = (\"00\" + time.getSeconds()).slice(-2);\n\t\tvalue += scriptProperties.delimiter + seconds;\n\t}\n\treturn value;\n}\n",
				"scriptproperties" : 
				{
					"delimiter" : ":",
					"showSeconds" : false,
					"use24hFormat" : true
				},
				"value" : "12:34"
			},
			"verticalalign" : "top"
		},
		{
			"alpha" : 0.69999999,
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n\treturn shared.miPrimaryColor;\n}\n",
				"value" : "0.48235 0.12941 0.12941"
			},
			"id" : 451,
			"image" : "models/workshop/3219510589/corner4.json",
			"name" : "Text Container",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 448,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n    .addCheckbox({\n        name: 'media',\n        label: 'Media based detection',\n        value: true\n    })\n    .addCheckbox({\n\t\tname: 'invert',\n\t\tlabel: 'Invert',\n\t\tvalue: false\n\t})\n    .addSlider({\n        name: 'min',\n        label: 'Min value',\n        value: 0,\n        min: 0,\n        max: 1,\n        integer: false\n    })\n    .addSlider({\n        name: 'max',\n        label: 'Max value',\n        value: 1,\n        min: 0,\n        max: 1,\n        integer: false\n    })\n    .addSlider({\n        name: 'timerIn',\n        label: 'Fade in timer',\n        value: 0.5,\n        min: 0,\n        max: 10,\n        integer: false\n    })\n    .addSlider({\n        name: 'timerOut',\n        label: 'Fade out timer',\n        value: 0.5,\n        min: 0,\n        max: 10,\n        integer: false\n    })\n    .addSlider({\n        name: 'fadeInDur',\n        label: 'Fade in duration',\n        value: 0.155,\n        min: 0,\n        max: 2,\n        integer: false\n    })\n    .addSlider({\n        name: 'fadeOutDur',\n        label: 'Fade out duration',\n        value: 0.2,\n        min: 0,\n        max: 2,\n        integer: false\n    })\n    .addSlider({\n        name: 'timerSwitch',\n        label: 'Flip timer',\n        value: 0.08,\n        min: 0,\n        max: 10,\n        integer: false\n    })\n    .addSlider({\n        name: 'switchDur',\n        label: 'Flip duration',\n        value: 0.125,\n        min: 0,\n        max: 2,\n        integer: false\n    })\n    .finish();\n\nconst vecToggles = new Vec3(1, 0, 0); //1 enabled, 0 disabled\nconst audioBuffer = engine.registerAudioBuffers(16);\nlet state, oldState, target, dur = 0, isVector, stopTimeout, pos, oldPos, flip, oldSettings = false, oldTextVisible = true, cursor, oldCursor = false;\n\nexport function update(value) {\n\tif (oldState == undefined) {\n        oldState = state;\n        target = (state && shared.miTextPos != 3) ^ scriptProperties.invert ? scriptProperties.max : scriptProperties.min;\n        target = shared.miTextPos == 1 || shared.miTextPos == 2 && oldPos ? target : -target;\n        return target = isVector ? lerp(value, new Vec3(target), vecToggles) : target;\n    }\n    \n    pos = thisLayer.getTransformMatrix().m[12] > engine.canvasSize.x / 2;\n    if (!scriptProperties.media) state = !!audioBuffer.average.reduce((a, b) => a + b) ^ scriptProperties.invert;\n    cursor = shared.miCursorIn ^ scriptProperties.invert;\n\n    flip = pos != oldPos;\n    const textVisibleChange = shared.miTextVisible != oldTextVisible;\n    const settingsChange = oldSettings != shared.miSettingsOpen;\n    const cursorChange = cursor != oldCursor;\n    \n    if (oldState != state || flip || settingsChange || textVisibleChange || cursorChange){\n        if (stopTimeout) stopTimeout();\n        oldState = state;\n        \n        let fadeDur, targ, timer;\n        if (state && !shared.miSettingsOpen && shared.miTextVisible && shared.miTextPos != 3 || shared.miSettingsOpen && !shared.miTextVisible || cursor && shared.miTextPos == 3 && !shared.miSettingsOpen && state && shared.miTextVisible) {\n            timer = flip ? scriptProperties.timerSwitch : scriptProperties.timerIn;\n            fadeDur = scriptProperties.fadeInDur;\n            targ = scriptProperties.max;\n        } else {\n            timer = flip ? scriptProperties.timerSwitch : scriptProperties.timerOut;\n            fadeDur = scriptProperties.fadeOutDur;\n            targ = scriptProperties.min;\n        }\n        if (settingsChange || textVisibleChange || cursorChange) {\n            timer = !cursor ^ scriptProperties.invert && cursorChange ? scriptProperties.timerOut : 0;\n            fadeDur = !cursor ^ scriptProperties.invert && cursorChange ? scriptProperties.fadeOutDur : shared.miSettingsOpenSpeed;\n        }\n\n        stopTimeout = engine.setTimeout(() => {setTarget(targ, fadeDur)}, timer * 1000);\n        \n        oldCursor = cursor;\n        oldTextVisible = shared.miTextVisible;\n        oldSettings = shared.miSettingsOpen;\n        oldPos = pos;\n    }\n    \n    return shared.miTextContainerScale = lerp(value, target, dur);\n}\n\nfunction setTarget(targ, fadeDur) {\n    target = shared.miTextPos == 1 || (shared.miTextPos >= 2 && pos) ? targ : -targ;\n    target = isVector ? new Vec3(target) : target;\n\tdur = engine.frametime / Math.max(0.0001, flip ? scriptProperties.switchDur : fadeDur);\n    dur = isVector ? vecToggles.multiply(dur) : dur;\n}\n\nfunction lerp(a, b, value) {\n    if (isVector) {\n        const x = WEMath.mix(a.x, b.x, value.x);\n        const y = WEMath.mix(a.y, b.y, value.y);\n        const z = WEMath.mix(a.z, b.z, value.z);\n        return new Vec3(x, y, z);\n    }\n    return WEMath.mix(a, b, value);\n}\n\nexport function init(value) {\n\tisVector = value.hasOwnProperty(\"x\");\n\tdur = isVector ? new Vec3(dur) : dur;\n    oldPos = thisLayer.getTransformMatrix().m[12] > engine.canvasSize.x / 2;\n    shared.miTextContainerScale = value;\n    shared.miTextPos = localStorage.get(\"miTextPos\");\n    shared.miTextPos = shared.miTextPos == undefined ? 2 : shared.miTextPos;\n\n    if (!scriptProperties.media) state = !!audioBuffer.average.reduce((a, b) => a + b) ^ scriptProperties.invert;\n}\n\nexport function mediaPlaybackChanged(event) {\n    if (scriptProperties.media) state = event.state == 1 ^ scriptProperties.invert;\n}\n",
				"scriptproperties" : 
				{
					"fadeInDur" : 0.155,
					"fadeOutDur" : 0.2,
					"invert" : false,
					"max" : 1,
					"media" : true,
					"min" : 0,
					"switchDur" : 0.125,
					"timerIn" : 0.5,
					"timerOut" : 0.5,
					"timerSwitch" : 0.079999998
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "512.00000 512.00000"
		},
		{
			"alignment" : "right",
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n\treturn shared.miPrimaryColor;\n}\n",
				"value" : "0.48235 0.12941 0.12941"
			},
			"effects" : 
			[
				{
					"file" : "effects/workshop/3219510589/tint/effect.json",
					"id" : 455,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 0
							},
							"constantshadervalues" : 
							{
								"alpha" : 
								{
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'fadeSpeed',\n\t\tlabel: 'Fade speed',\n\t\tvalue: 1,\n\t\tmin: 0,\n\t\tmax: 3,\n\t\tinteger: false\n\t})\n\t.finish();\n\nlet initValue, parent, initParent;\n\nexport function update() {\n\tshared.miTextBgColorFadeSpeed = scriptProperties.fadeSpeed;\n\treturn Math.max(0, Math.abs(parent.scale.x / initParent.x) * scriptProperties.fadeSpeed - (scriptProperties.fadeSpeed - 1)) * initValue;\n}\n\nexport function init(value) {\n\tinitValue = value;\n\tparent = thisLayer.getParent();\n\tinitParent = parent.scale;\n\tshared.miTextBgColorFadeSpeed = scriptProperties.fadeSpeed;\n\tshared.miInitTextBgColorAlpha = value;\n}\n",
									"scriptproperties" : 
									{
										"fadeSpeed" : 1
									},
									"value" : 0.30000001
								},
								"color" : 
								{
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'dur',\n\t\tlabel: 'Transition duration',\n\t\tvalue: 1,\n\t\tmin: 0,\n\t\tmax: 2,\n\t\tinteger: false\n\t})\n\t.finish();\n\nlet timer, oldColor = new Vec3(0), newColor = new Vec3(0);\n\nexport function update() {\n\tvar color = newColor;\n\t\n\tif (timer < scriptProperties.dur) {\n\t\tcolor = oldColor.mix(newColor, timer / scriptProperties.dur);\n\t\ttimer += engine.frametime;\n\t\tshared.miTextBgColor = color;\n\t}\n\n\treturn color;\n}\n\nexport function mediaThumbnailChanged(event) {\n\ttimer = 0;\n\toldColor = newColor;\n\tnewColor = event.tertiaryColor;\n\tshared.miTextBgColor = newColor;\n}\n\nexport function init() {\n\tshared.miTextBgColor = newColor;\n}\n",
									"scriptproperties" : 
									{
										"dur" : 1
									},
									"value" : "0.00000 0.00000 0.00000"
								}
							},
							"id" : 0,
							"textures" : [ null, "workshop/3219510589/text_viss0" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/3219510589/opacity/effect.json",
					"id" : 457,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 0.69999999
							},
							"id" : 458
						}
					],
					"visible" : true
				}
			],
			"id" : 454,
			"image" : "models/util/solidlayer.json",
			"name" : "Background",
			"origin" : "-256.00000 0.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 451,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'border',\n\t\tlabel: 'Border',\n\t\tvalue: 0,\n\t\tmin: -300,\n\t\tmax: 300,\n\t\tinteger: false\n\t})\n\t.finish();\n\nlet artist = \"Artist Name\", song = \"Song Title\", settings = \"Settings Container\", corners = \"Rounded Corners\", initScale;\n\nexport function update(value) {\n    let width;\n    if (!shared.miTextVisible) width = settings.size.x / 2 * Math.abs(settings.scale.x) - settings.origin.x;\n    else width = Math.max(artist.size.x * Math.abs(artist.scale.x) - artist.origin.x, song.size.x * Math.abs(song.scale.x) - song.origin.x);\n\n    width -= corners.size.x * Math.min(1, Math.abs(corners.scale.x)) - scriptProperties.border;\n    value.x = width / (thisLayer.size.x * initScale.x) * initScale.x;\n    return value;\n}\n\nexport function init(value) {\n    artist = thisScene.getLayer(artist);\n    song = thisScene.getLayer(song);\n    settings = thisScene.getLayer(settings);\n    corners = thisScene.getLayer(corners);\n    initScale = value;\n}\n",
				"scriptproperties" : 
				{
					"border" : -182
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "1206.00000 512.00000"
		},
		{
			"alignment" : "right",
			"alpha" : 0.69999999,
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet initContainer;\n\nexport function update() {\n    const mixValue = Math.max(0, Math.abs(shared.miTextContainerScale.x / initContainer.x) * shared.miTextBgColorFadeSpeed - (shared.miTextBgColorFadeSpeed - 1)) * shared.miInitTextBgColorAlpha;\n    return shared.miPrimaryColor.mix(shared.miTextBgColor, mixValue);\n}\n\nexport function init() {\n    initContainer = shared.miTextContainerScale;\n}\n",
				"value" : "0.33725 0.09020 0.09020"
			},
			"id" : 461,
			"image" : "models/workshop/3219510589/corners.json",
			"name" : "Rounded Corners",
			"origin" : "-1206.00000 0.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 454,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet initValue, parent, initParent, container, initContainer;\n\nexport function update(value) {\n    value.x = initValue.x / Math.max(0.001, Math.abs(parent.scale.x * container.scale.x)) * initParent.x * initContainer.x;\n    return value;\n}\n\nexport function init(value) {\n    parent = thisLayer.getParent();\n    container = parent.getParent();\n    initParent = parent.scale;\n    initContainer = container.scale;\n    initValue = value;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "85.00000 512.00000"
		},
		{
			"alignment" : "right",
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport var scriptProperties = createScriptProperties()\n\t.addSlider({\n\t\tname: 'dur',\n\t\tlabel: 'Transition duration',\n\t\tvalue: 1,\n\t\tmin: 0,\n\t\tmax: 2,\n\t\tinteger: false\n\t})\n\t.finish();\n\nlet timer, oldColor = new Vec3(0), newColor = new Vec3(0);\n\nexport function update() {\n\tvar color = newColor;\n\n\tif (timer < scriptProperties.dur) {\n\t\tcolor = oldColor.mix(newColor, timer / scriptProperties.dur);\n\t\ttimer += engine.frametime;\n\t\tshared.miTextColor = color;\n\t}\n\n\treturn color;\n}\n\nexport function mediaThumbnailChanged(event) {\n\ttimer = 0;\n\toldColor = newColor;\n\tnewColor = event.textColor;\n\tshared.miTextColor = newColor;\n}\n",
				"scriptproperties" : 
				{
					"dur" : 1
				},
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 468,
			"image" : "models/util/solidlayer.json",
			"name" : "Progress Bar",
			"origin" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet initValue, parent, initParent;\n\nexport function update(value) {\n    value.x = initValue.x / Math.max(0.001, parent.scale.x) * initParent.x;\n    return value;\n}\n\nexport function init(value) {\n    parent = thisLayer.getParent();\n    initParent = parent.scale;\n    initValue = value;\n}\n",
				"value" : "-66.00000 -162.00000 0.00000"
			},
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 454,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\n// Script by Rusty\n\nlet defScale, defRatio = 0.01, curRatio = 0, playbackState, oldTime = 0, newTime = 0;\nconst updateMult = 1; //how smooth bar updates, 1.0 = updates each second, 0.1 = updates each .1 of a second\n//though smaller the number the less accurate it gets, wouldn't recommend going lower than 0.5, 1.0 is pretty much 100% accurate\n\nexport function update(value) {\n    newTime = Date.now();\n    if (playbackState == MediaPlaybackEvent.PLAYBACK_PLAYING && newTime - oldTime >= 1000*updateMult)\n    {\n        curRatio += defRatio*updateMult;\n        value.x = defScale.x*curRatio;\n        oldTime = newTime;\n    }\n    return value;\n}\n\nexport function init(value) {\n    defScale = value;\n    oldTime = Date.now();\n    playbackState = MediaPlaybackEvent.PLAYBACK_STOPPED;\n    return value;\n}\n\nexport function mediaTimelineChanged(event) {\n    defRatio = 1/event.duration;\n    curRatio = event.position/event.duration;\n}\n\nexport function mediaPlaybackChanged(event) {\n    playbackState = event.state;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "1132.00000 15.00000",
			"visible" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nconst trigger = 0.05;\nlet parent;\n\nexport function update(value) {\n    if (shared.miSettingsOpen && Math.abs(parent.scale.x) < trigger) value = false;\n    else if (!shared.miSettingsOpen && Math.abs(parent.scale.x) < trigger) value = true;\n    return shared.miTextVisible = value;\n}\n\nexport function init() {\n    parent = thisLayer.getParent().getParent();\n    shared.miTextVisible = true;\n    shared.miTextVisibleTriggerValue = trigger;\n}\n",
				"value" : true
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n\treturn shared.miTextColor;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 469,
			"image" : "models/workshop/3219510589/CircleXXXS.json",
			"name" : "Round R",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 468,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet initValue, parent, initParent, container, initContainer;\n\nexport function update(value) {\n    value.x = initValue.x / Math.max(0.001, Math.abs(parent.scale.x * container.scale.x)) * initParent.x * initContainer.x;\n    return value;\n}\n\nexport function init(value) {\n    parent = thisLayer.getParent();\n    container = parent.getParent();\n    initParent = parent.scale;\n    initContainer = container.scale;\n    initValue = value;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "15.00000 15.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n\treturn shared.miTextColor;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 472,
			"image" : "models/workshop/3219510589/CircleXXXS.json",
			"name" : "Round L",
			"origin" : "-1132.00000 0.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 468,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet initValue, parent, initParent, container, initContainer;\n\nexport function update(value) {\n    value.x = initValue.x / Math.max(0.001, Math.abs(parent.scale.x * container.scale.x)) * initParent.x * initContainer.x;\n    return value;\n}\n\nexport function init(value) {\n    parent = thisLayer.getParent();\n    container = parent.getParent();\n    initParent = parent.scale;\n    initContainer = container.scale;\n    initValue = value;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "15.00000 15.00000"
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.43922 0.00000 0.74902",
			"blockalign" : false,
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n\treturn shared.miTextColor;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"depthtest" : "enabled",
			"font" : "fonts/workshop/3219510589/LEMONMILK-Bold.otf",
			"horizontalalign" : "right",
			"id" : 473,
			"limitrows" : true,
			"limituseellipsis" : false,
			"limitwidth" : true,
			"maxrows" : 1,
			"maxwidth" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\n// This script was actually made by seekay XD\n\nlet mediaInfo = \"Media Info (ROUND)\";\n\nexport function init() {\n    mediaInfo = thisScene.getLayer(mediaInfo);\n}\n\nexport function update(value) {\n    if (thisLayer.scale.x < 0) value = engine.canvasSize.x * (1 - 0.25 * mediaInfo.scale.x) - mediaInfo.origin.x;\n    else value = mediaInfo.origin.x - engine.canvasSize.x * 0.25 * mediaInfo.scale.x;\n    return value / mediaInfo.scale.x;\n}\n",
				"value" : 1200.0
			},
			"name" : "Artist Name",
			"opaquebackground" : false,
			"origin" : "-308.00000 4.00000 0.00000",
			"padding" : 0,
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 451,
			"pointsize" : 38.0,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet initValue, parent;\n\nexport function update(value) {\n    value.x = Math.sign(parent.scale.x) * initValue.x;\n    thisLayer.horizontalalign = value.x > 0 ? \"right\" : \"left\";\n    return value;\n}\n\nexport function init(value) {\n    initValue = value;\n    parent = thisLayer.getParent();\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "1166.00000 214.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nvar mediaData = \"\";\n\n/**\n * @param {String} value - for property 'text'\n * @return {String} - update current property value\n */\nexport function update(value) {\n\treturn mediaData;\n}\n\n/**\n * @param {MediaPropertiesEvent} event\n */\nexport function mediaPropertiesChanged(event) {\n\tmediaData = event.artist;\n}\n",
				"value" : "Artist Name\nTHIS LAYER NAME HAS TO BE UNIQUE"
			},
			"verticalalign" : "bottom",
			"visible" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet parent;\n\nexport function update(value) {\n    if (shared.miSettingsOpen && Math.abs(parent.scale.x) < shared.miTextVisibleTriggerValue) value = false;\n    else if (!shared.miSettingsOpen && Math.abs(parent.scale.x) < shared.miTextVisibleTriggerValue) value = true;\n    return shared.miTextVisible = value;\n}\n\nexport function init() {\n    parent = thisLayer.getParent();\n    shared.miTextVisible = true;\n}\n",
				"value" : true
			}
		},
		{
			"anchor" : "none",
			"angles" : "0.00000 -0.00000 0.00000",
			"backgroundbrightness" : 1.0,
			"backgroundcolor" : "0.43922 0.00000 0.74902",
			"blockalign" : false,
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n\treturn shared.miTextColor;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"depthtest" : "enabled",
			"font" : "fonts/workshop/3219510589/LEMONMILK-Light.otf",
			"horizontalalign" : "right",
			"id" : 474,
			"limitrows" : true,
			"limituseellipsis" : false,
			"limitwidth" : true,
			"maxrows" : 1,
			"maxwidth" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\n// This script was actually made by seekay XD\n\nlet mediaInfo = \"Media Info (ROUND)\";\n\nexport function init(value)\n{\n    mediaInfo = thisScene.getLayer(mediaInfo);\n}\n\nexport function update(value) {\n    if (thisLayer.scale.x < 0) {\n    value = engine.canvasSize.x * (1 - 0.25 * mediaInfo.scale.x) - mediaInfo.origin.x;\n    }\n    else {\n    value = mediaInfo.origin.x - ((engine.canvasSize.x*0.25)*mediaInfo.scale.x);\n  }\n    return value / mediaInfo.scale.x;\n}\n",
				"value" : 1200.0
			},
			"name" : "Song Title",
			"opaquebackground" : false,
			"origin" : "-308.00000 38.00000 0.00000",
			"padding" : 0,
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 451,
			"pointsize" : 32.0,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet initValue, parent;\n\nexport function update(value) {\n    value.x = Math.sign(parent.scale.x) * initValue.x;\n    thisLayer.horizontalalign = value.x > 0 ? \"right\" : \"left\";\n    return value;\n}\n\nexport function init(value) {\n    initValue = value;\n    parent = thisLayer.getParent();\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "807.00000 180.00000",
			"text" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nvar mediaData = \"\";\n\n/**\n * @param {String} value - for property 'text'\n * @return {String} - update current property value\n */\nexport function update(value) {\n\treturn mediaData;\n}\n\n/**\n * @param {MediaPropertiesEvent} event\n */\nexport function mediaPropertiesChanged(event) {\n\tmediaData = event.title;\n}\n",
				"value" : "Song Title\nTHIS LAYER NAME HAS TO BE UNIQUE"
			},
			"verticalalign" : "top",
			"visible" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet parent;\n\nexport function update(value) {\n\tif (shared.miSettingsOpen && Math.abs(parent.scale.x) < 1e-4) value = false;\n\telse if (!shared.miSettingsOpen && Math.abs(parent.scale.x) < 1e-4) value = true;\n\treturn shared.miTextVisible = value;\n}\n\nexport function init() {\n    parent = thisLayer.getParent();\n\tshared.miTextVisible = true;\n}\n",
				"value" : true
			}
		},
		{
			"alpha" : 0.0,
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"id" : 477,
			"image" : "models/util/solidlayer.json",
			"name" : "Settings Container",
			"origin" : "-384.00000 0.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 451,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet initValue, container;\n\nexport function update() {\n\treturn initValue.multiply(vecSign(container.scale));\n}\n\nexport function init(value) {\n\tcontainer = thisLayer.getParent();\n\tinitValue = value;\n}\n\nfunction vecSign(vec) {\n\treturn new Vec3(Math.sign(vec.x), Math.sign(vec.y), Math.sign(vec.z));\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"size" : "256.00000 512.00000",
			"visible" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n\treturn !shared.miTextVisible && shared.miSettingsOpen;\n}\n",
				"value" : false
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n    return shared.miTextColor;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 478,
			"image" : "models/workshop/3219510589/dragAndDropToggle.json",
			"name" : "dragAndDropToggle",
			"origin" : "0.00000 170.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 477,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet animation, parent;\n\nexport function init() {\n\tanimation = thisLayer.getTextureAnimation();\n\tanimation.stop();\n\tparent = thisLayer.getParent();\n\tanimation.setFrame(shared.miDragable * 1);\n}\n\nexport function cursorClick(event) {\n\tif (parent.visible) {\n\t\tshared.miDragable = !shared.miDragable;\n\t\tlocalStorage.set(\"miDragable\", shared.miDragable);\n\t\tanimation.setFrame(shared.miDragable * 1);\n\t}\n}\n",
				"value" : "0.80000 0.80000 0.80000"
			},
			"size" : "256.00000 128.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n    return shared.miTextColor;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 481,
			"image" : "models/workshop/3219510589/clockHideToggle.json",
			"name" : "clockHideToggle",
			"origin" : "0.00000 58.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 477,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet animation, parent;\n\nexport function init() {\n\tanimation = thisLayer.getTextureAnimation();\n\tanimation.stop();\n\tparent = thisLayer.getParent();\n\tanimation.setFrame(shared.miShowClock);\n}\n\nexport function cursorClick(event) {\n\tif (parent.visible) {\n\t\tshared.miShowClock = (shared.miShowClock + 1) % 3;\n\t\tlocalStorage.set(\"miShowClock\", shared.miShowClock);\n\t\tanimation.setFrame(shared.miShowClock);\n\t}\n}\n",
				"value" : "0.80000 0.80000 1.00000"
			},
			"size" : "256.00000 128.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n    return shared.miTextColor;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 484,
			"image" : "models/workshop/3219510589/clockOrientationToggle.json",
			"name" : "clockOrientationToggle",
			"origin" : "0.00000 -58.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 477,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet animation, parent;\n\nexport function init() {\n    animation = thisLayer.getTextureAnimation();\n    animation.stop();\n    parent = thisLayer.getParent();\n    animation.setFrame(shared.miClockPos);\n}\n\nexport function cursorClick(event) {\n    if (parent.visible) {\n        shared.miClockPos = (shared.miClockPos + 1) % 3;\n        localStorage.set(\"miClockPos\", shared.miClockPos);\n        animation.setFrame(shared.miClockPos);\n    }\n}\n",
				"value" : "0.80000 0.80000 1.00000"
			},
			"size" : "256.00000 128.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n    return shared.miTextColor;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 487,
			"image" : "models/workshop/3219510589/textOrientationToggle.json",
			"name" : "textOrientationToggle",
			"origin" : "0.00000 -170.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 477,
			"scale" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nlet animation, parent;\n\nexport function init() {\n    animation = thisLayer.getTextureAnimation();\n    animation.stop();\n    parent = thisLayer.getParent();\n    animation.setFrame(shared.miTextPos);\n}\n\nexport function cursorClick(event) {\n    if (parent.visible) {\n        shared.miTextPos = (shared.miTextPos + 1) % 4;\n        localStorage.set(\"miTextPos\", shared.miTextPos);\n        animation.setFrame(shared.miTextPos);\n    }\n}\n",
				"value" : "0.80000 0.80000 1.00000"
			},
			"size" : "256.00000 128.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"effects" : 
			[
				{
					"file" : "effects/workshop/3219510589/blendgradient/effect.json",
					"id" : 492,
					"name" : "Media Transition",
					"passes" : 
					[
						{
							"combos" : 
							{
								"WRITEALPHA" : 1
							},
							"constantshadervalues" : 
							{
								"alpha" : 1,
								"gradientscale" : 0.34999999,
								"multiply" : 
								{
									"animation" : 
									{
										"c0" : 
										[
											{
												"back" : 
												{
													"enabled" : false,
													"x" : -1,
													"y" : -0.0
												},
												"frame" : 0,
												"front" : 
												{
													"enabled" : false,
													"x" : 0.51111108,
													"y" : 0
												},
												"lockangle" : true,
												"locklength" : true,
												"value" : 1
											},
											{
												"back" : 
												{
													"enabled" : false,
													"x" : -0.51111108,
													"y" : -0.0
												},
												"frame" : 38,
												"front" : 
												{
													"enabled" : false,
													"x" : 1,
													"y" : 0
												},
												"lockangle" : true,
												"locklength" : true,
												"value" : 0
											}
										],
										"options" : 
										{
											"fps" : 30,
											"length" : 45,
											"mode" : "single",
											"wraploop" : null
										}
									},
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function mediaThumbnailChanged(event) {\n\tthisObject.getAnimation().play();\n}\n",
									"value" : 0
								}
							},
							"id" : 493,
							"textures" : [ null, "util/black", null ],
							"usertextures" : 
							[
								null,
								{
									"name" : "$mediaPreviousThumbnail",
									"type" : "system"
								}
							]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/3219510589/tint/effect.json",
					"id" : 495,
					"name" : "HUE",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 26
							},
							"constantshadervalues" : 
							{
								"alpha" : 
								{
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n    .addCheckbox({\n        name: 'media',\n        label: 'Media Based Detection',\n        value: false\n    })\n    .addCheckbox({\n\tname: 'invert',\n\tlabel: 'Invert',\n\tvalue: false\n\t})\n    .addSlider({\n        name: 'min',\n        label: 'Min value',\n        value: 0,\n        min: 0,\n        max: 1,\n        integer: false\n    })\n    .addSlider({\n        name: 'max',\n        label: 'Max value',\n        value: 1,\n        min: 0,\n        max: 1,\n        integer: false\n    })\n    .addSlider({\n        name: 'timerIn',\n        label: 'Fade in timer',\n        value: 2,\n        min: 0,\n        max: 10,\n        integer: false\n    })\n    .addSlider({\n        name: 'timerOut',\n        label: 'Fade out timer',\n        value: 2,\n        min: 0,\n        max: 10,\n        integer: false\n    })\n    .addSlider({\n        name: 'fadeInDur',\n        label: 'Fade in duration',\n        value: 0.5,\n        min: 0,\n        max: 2,\n        integer: false\n    })\n    .addSlider({\n        name: 'fadeOutDur',\n        label: 'Fade out duration',\n        value: 0.5,\n        min: 0,\n        max: 2,\n        integer: false\n    })\n    .finish();\n\nconst vecToggles = new Vec3(1, 1, 1); //1 enabled, 0 disabled\nconst audioBuffer = engine.registerAudioBuffers(16);\nlet state, oldState, target, dur = 0, isVector, stopTimeout;\n\nexport function update(value) {\n\tif (oldState == undefined) {\n\t\toldState = state;\n\t\ttarget = state ? scriptProperties.max : scriptProperties.min;\n\t\treturn target = isVector ? lerp(value, new Vec3(target), vecToggles) : target;\n\t}\n\n    if (!scriptProperties.media) state = !!audioBuffer.average.reduce((a, b) => a + b) ^ scriptProperties.invert;\n\n    if (oldState != state){\n        oldState = state;\n\n        if (stopTimeout) stopTimeout();\n        if (state) stopTimeout = engine.setTimeout(() => {setTarget(scriptProperties.max, scriptProperties.fadeInDur)}, scriptProperties.timerIn * 1000);\n        else stopTimeout = engine.setTimeout(() => {setTarget(scriptProperties.min, scriptProperties.fadeOutDur)}, scriptProperties.timerOut * 1000);\n    }\n\n    return lerp(value, target, dur);\n}\n\nfunction setTarget(targ, fadeDur) {\n    target = isVector ? new Vec3(targ) : targ;\n\tdur = engine.frametime / Math.max(0.0001, fadeDur);\n    dur = isVector ? vecToggles.multiply(dur) : dur;\n}\n\nfunction lerp(a, b, value) {\n    if (isVector) {\n        const x = Math.max(scriptProperties.min, Math.min(WEMath.mix(a.x, b.x, value.x), scriptProperties.max));\n        const y = Math.max(scriptProperties.min, Math.min(WEMath.mix(a.y, b.y, value.y), scriptProperties.max));\n        const z = Math.max(scriptProperties.min, Math.min(WEMath.mix(a.z, b.z, value.z), scriptProperties.max));\n        return new Vec3(x, y, z);\n    }\n    return Math.max(scriptProperties.min, Math.min(WEMath.mix(a, b, value), scriptProperties.max));\n}\n\nexport function init(value) {\n\tisVector = value.hasOwnProperty(\"x\");\n\tdur = isVector ? new Vec3(dur) : dur;\n\n    if (!scriptProperties.media) {\n\t\tstate = !!audioBuffer.average.reduce((a, b) => a + b) ^ scriptProperties.invert;\n\t\ttarget = state ? scriptProperties.max : scriptProperties.min;\n    \treturn target = isVector ? lerp(value, new Vec3(target), vecToggles) : target;\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n    if (scriptProperties.media) state = event.state == 1 ^ scriptProperties.invert;\n}\n",
									"scriptproperties" : 
									{
										"fadeInDur" : 0.34999999,
										"fadeOutDur" : 0.25,
										"invert" : true,
										"max" : 1,
										"media" : 
										{
											"user" : "media",
											"value" : true
										},
										"min" : 0,
										"timerIn" : 1.5,
										"timerOut" : 0.050000001
									},
									"value" : 1
								},
								"color" : 
								{
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n\treturn shared.miPrimaryColor;\n}\n",
									"value" : "0.48235 0.12941 0.12941"
								}
							},
							"id" : 496
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/3219510589/tint/effect.json",
					"id" : 497,
					"name" : "SATURATION",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 27
							},
							"constantshadervalues" : 
							{
								"alpha" : 
								{
									"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nimport * as WEMath from 'WEMath';\n\nexport var scriptProperties = createScriptProperties()\n    .addCheckbox({\n        name: 'media',\n        label: 'Media Based Detection',\n        value: false\n    })\n    .addCheckbox({\n\tname: 'invert',\n\tlabel: 'Invert',\n\tvalue: false\n\t})\n    .addSlider({\n        name: 'min',\n        label: 'Min value',\n        value: 0,\n        min: 0,\n        max: 1,\n        integer: false\n    })\n    .addSlider({\n        name: 'max',\n        label: 'Max value',\n        value: 1,\n        min: 0,\n        max: 1,\n        integer: false\n    })\n    .addSlider({\n        name: 'timerIn',\n        label: 'Fade in timer',\n        value: 2,\n        min: 0,\n        max: 10,\n        integer: false\n    })\n    .addSlider({\n        name: 'timerOut',\n        label: 'Fade out timer',\n        value: 2,\n        min: 0,\n        max: 10,\n        integer: false\n    })\n    .addSlider({\n        name: 'fadeInDur',\n        label: 'Fade in duration',\n        value: 0.5,\n        min: 0,\n        max: 2,\n        integer: false\n    })\n    .addSlider({\n        name: 'fadeOutDur',\n        label: 'Fade out duration',\n        value: 0.5,\n        min: 0,\n        max: 2,\n        integer: false\n    })\n    .finish();\n\nconst vecToggles = new Vec3(1, 1, 1); //1 enabled, 0 disabled\nconst audioBuffer = engine.registerAudioBuffers(16);\nlet state, oldState, target, dur = 0, isVector, stopTimeout;\n\nexport function update(value) {\n\tif (oldState == undefined) {\n\t\toldState = state;\n\t\ttarget = state ? scriptProperties.max : scriptProperties.min;\n\t\treturn target = isVector ? lerp(value, new Vec3(target), vecToggles) : target;\n\t}\n\n    if (!scriptProperties.media) state = !!audioBuffer.average.reduce((a, b) => a + b) ^ scriptProperties.invert;\n\n    if (oldState != state){\n        oldState = state;\n\n        if (stopTimeout) stopTimeout();\n        if (state) stopTimeout = engine.setTimeout(() => {setTarget(scriptProperties.max, scriptProperties.fadeInDur)}, scriptProperties.timerIn * 1000);\n        else stopTimeout = engine.setTimeout(() => {setTarget(scriptProperties.min, scriptProperties.fadeOutDur)}, scriptProperties.timerOut * 1000);\n    }\n\n    return lerp(value, target, dur);\n}\n\nfunction setTarget(targ, fadeDur) {\n    target = isVector ? new Vec3(targ) : targ;\n\tdur = engine.frametime / Math.max(0.0001, fadeDur);\n    dur = isVector ? vecToggles.multiply(dur) : dur;\n}\n\nfunction lerp(a, b, value) {\n    if (isVector) {\n        const x = Math.max(scriptProperties.min, Math.min(WEMath.mix(a.x, b.x, value.x), scriptProperties.max));\n        const y = Math.max(scriptProperties.min, Math.min(WEMath.mix(a.y, b.y, value.y), scriptProperties.max));\n        const z = Math.max(scriptProperties.min, Math.min(WEMath.mix(a.z, b.z, value.z), scriptProperties.max));\n        return new Vec3(x, y, z);\n    }\n    return Math.max(scriptProperties.min, Math.min(WEMath.mix(a, b, value), scriptProperties.max));\n}\n\nexport function init(value) {\n\tisVector = value.hasOwnProperty(\"x\");\n\tdur = isVector ? new Vec3(dur) : dur;\n\n    if (!scriptProperties.media) {\n\t\tstate = !!audioBuffer.average.reduce((a, b) => a + b) ^ scriptProperties.invert;\n\t\ttarget = state ? scriptProperties.max : scriptProperties.min;\n    \treturn target = isVector ? lerp(value, new Vec3(target), vecToggles) : target;\n\t}\n}\n\nexport function mediaPlaybackChanged(event) {\n    if (scriptProperties.media) state = event.state == 1 ^ scriptProperties.invert;\n}\n",
									"scriptproperties" : 
									{
										"fadeInDur" : 0.34999999,
										"fadeOutDur" : 0.25,
										"invert" : true,
										"max" : 0.34999999,
										"media" : 
										{
											"user" : "media",
											"value" : true
										},
										"min" : 0,
										"timerIn" : 1.5,
										"timerOut" : 0.050000001
									},
									"value" : 1
								},
								"color" : "0.00000 0.00000 0.00000"
							},
							"id" : 498
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/workshop/3219510589/opacity/effect.json",
					"id" : 499,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"alpha" : 1
							},
							"id" : 500,
							"textures" : [ null, "workshop/3219510589/opacitymap1" ]
						}
					],
					"visible" : true
				}
			],
			"id" : 490,
			"image" : "models/workshop/3219510589/solid_instance_model_b5d59996.json",
			"instance" : 
			{
				"combos" : 
				{
					"version" : 2
				},
				"id" : 491,
				"textures" : [ "util/white" ],
				"usertextures" : 
				[
					{
						"name" : "$mediaThumbnail",
						"type" : "system"
					}
				]
			},
			"name" : "Album Cover",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 448,
			"size" : "456.00000 456.00000"
		},
		{
			"alpha" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.52941173,
								"y" : -0.0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : -0.1
							},
							"frame" : 1,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0.1
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1
						},
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0.011764706
							},
							"frame" : 2,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.55882353,
								"y" : -0.1
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1
						},
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -0.5625,
								"y" : -0.0
							},
							"frame" : 18,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"options" : 
					{
						"fps" : 30,
						"length" : 18,
						"mode" : "single",
						"startpaused" : true,
						"wraploop" : null
					}
				},
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function mediaPlaybackChanged(event) {\n    if (event.state == 1 && !shared.miSettingsVisible) thisObject.getAnimation().play();\n}\n",
				"value" : 0.0
			},
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n\treturn shared.miTextColor;\n}\n",
				"value" : "1.00000 1.00000 1.00000"
			},
			"id" : 503,
			"image" : "models/workshop/3219510589/play.json",
			"name" : "Play Icon",
			"origin" : "-4.00000 12.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 490,
			"scale" : "1.50000 1.50000 1.00000",
			"size" : "192.00000 192.00000"
		},
		{
			"alpha" : 
			{
				"animation" : 
				{
					"c0" : 
					[
						{
							"back" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : -0.52941173,
								"y" : -0.0
							},
							"frame" : 0,
							"front" : 
							{
								"enabled" : true,
								"magic" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						},
						{
							"back" : 
							{
								"enabled" : true,
								"x" : -1,
								"y" : -0.1
							},
							"frame" : 1,
							"front" : 
							{
								"enabled" : false,
								"x" : 1,
								"y" : 0.1
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1
						},
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -1,
								"y" : 0.011764706
							},
							"frame" : 2,
							"front" : 
							{
								"enabled" : true,
								"x" : 0.55882353,
								"y" : -0.1
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 1
						},
						{
							"back" : 
							{
								"enabled" : false,
								"x" : -0.5625,
								"y" : -0.0
							},
							"frame" : 18,
							"front" : 
							{
								"enabled" : true,
								"x" : 1,
								"y" : 0
							},
							"lockangle" : true,
							"locklength" : true,
							"value" : 0
						}
					],
					"options" : 
					{
						"fps" : 30,
						"length" : 18,
						"mode" : "single",
						"wraploop" : null
					}
				},
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function mediaPlaybackChanged(event) {\n    if (event.state == 2 && !shared.miSettingsVisible) thisObject.getAnimation().play();\n}\n",
				"value" : 0.0
			},
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n\treturn shared.miTextColor;\n}\n",
				"value" : "0.00000 0.00000 0.00000"
			},
			"id" : 510,
			"image" : "models/workshop/3219510589/pause.json",
			"name" : "Pause Icon",
			"origin" : "0.00000 12.00000 0.00000",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 490,
			"scale" : "1.50000 1.50000 1.00000",
			"size" : "192.00000 192.00000"
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n\treturn shared.miTextColor;\n}\n",
				"value" : "0.00000 0.00000 0.00000"
			},
			"id" : 513,
			"image" : "models/workshop/3219510589/COGWHEEL.json",
			"name" : "Settings button",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 490,
			"size" : "416.00000 416.00000",
			"visible" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport var scriptProperties = createScriptProperties()\n\t.addCheckbox({\n\t\tname: 'enabled',\n\t\tlabel: 'Enable settings',\n\t\tvalue: true\n\t})\n\t.addSlider({\n\t\tname: 'speed',\n\t\tlabel: 'Settings open speed',\n\t\tvalue: 0.2,\n\t\tmin: 0,\n\t\tmax: 1,\n\t\tinteger: false\n\t})\n\t\n\t.finish();\n\nconst maxClickTime = 250; //in ms\n\nexport function init() {\n\tshared.miSettingsVisible = thisLayer.visible = false;\n\tshared.miSettingsOpen = false;\n\tshared.miMaxCLickTime = maxClickTime;\n\tshared.miSettingsOpenSpeed = scriptProperties.speed / 2;\n}\n\nexport function cursorEnter(event) {\n\tshared.miSettingsVisible = thisLayer.visible = true && scriptProperties.enabled;\n}\n\nexport function cursorLeave(event) {\n\tshared.miSettingsVisible = thisLayer.visible = false || shared.miSettingsOpen;\n}\n\nlet timer;\n\nexport function cursorDown(event) {\n\ttimer = Date.now();\n}\n\nexport function cursorUp(event) {\n\tif (Date.now() - timer < maxClickTime) {\n\t\tshared.miSettingsOpen = !shared.miSettingsOpen && scriptProperties.enabled;\n\t\tshared.miSettingsOpenSpeed = scriptProperties.speed / 2;\n\t}\t\n}\n",
				"scriptproperties" : 
				{
					"enabled" : true,
					"speed" : 0.2
				},
				"value" : false
			}
		},
		{
			"angles" : "0.00000 -0.00000 0.00000",
			"castshadow" : false,
			"color" : 
			{
				"script" : "'use strict';\n// Please note: Do not remove this line or asset references may break.\nexport let __workshopId = '3219510589';\n\nexport function update() {\n    return shared.miTextBgColor;\n}\n",
				"value" : "0.00000 0.00000 0.00000"
			},
			"id" : 516,
			"image" : "models/workshop/3219510589/freem.json",
			"name" : "Frame",
			"parallaxDepth" : "0.00000 0.00000",
			"parent" : 448,
			"size" : "470.00000 470.00000"
		},
		{
			"castshadow" : false,
			"effects" : 
			[
				{
					"file" : "effects/blur/effect.json",
					"id" : 70,
					"name" : "",
					"passes" : 
					[
						{
							"id" : 71
						},
						{
							"constantshadervalues" : 
							{
								"scale" : "0.65 0.65"
							},
							"id" : 158
						},
						{
							"combos" : 
							{
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "0.65 0.65"
							},
							"id" : 73
						},
						{
							"constantshadervalues" : 
							{
								"compositecolor" : "1 1 1"
							},
							"id" : 122,
							"textures" : [ null, "gradient/blend_gradient", null ]
						}
					],
					"visible" : 
					{
						"user" : "blur",
						"value" : true
					}
				}
			],
			"id" : 67,
			"image" : "models/util/fullscreenlayer.json",
			"name" : "Couche de post-traitement",
			"parallaxDepth" : "0.00000 0.00000"
		},
		{
			"castshadow" : false,
			"effects" : 
			[
				{
					"file" : "effects/workshop/2795521260/color_grading/effect.json",
					"id" : 172,
					"name" : "",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"Brightness" : 
								{
									"animation" : 
									{
										"c0" : 
										[
											{
												"back" : 
												{
													"enabled" : true,
													"magic" : true,
													"x" : -1,
													"y" : -0.0
												},
												"frame" : 0,
												"front" : 
												{
													"enabled" : true,
													"magic" : true,
													"x" : 0.50416666,
													"y" : 0
												},
												"lockangle" : true,
												"locklength" : true,
												"value" : -1
											},
											{
												"back" : 
												{
													"enabled" : true,
													"magic" : true,
													"x" : -0.50416666,
													"y" : -0.0
												},
												"frame" : 120,
												"front" : 
												{
													"enabled" : true,
													"magic" : true,
													"x" : 1,
													"y" : 0
												},
												"lockangle" : true,
												"locklength" : true,
												"value" : 0
											}
										],
										"options" : 
										{
											"fps" : 30,
											"length" : 120,
											"mode" : "single",
											"wraploop" : null
										}
									},
									"value" : 0.0
								},
								"Channel influence" : "1 1 1",
								"Contrast" : 0.0,
								"Opacity" : 1.0
							},
							"id" : 173
						}
					],
					"visible" : true
				}
			],
			"id" : 164,
			"image" : "models/util/fullscreenlayer.json",
			"name" : "Couche de post-traitement",
			"parallaxDepth" : "0.00000 0.00000",
			"visible" : 
			{
				"user" : "intro",
				"value" : true
			}
		},
		{
			"id" : 3234,
			"maxtime" : 5.0,
			"mintime" : 1.0,
			"muteineditor" : true,
			"name" : "Imperium (slowed).mp3",
			"playbackmode" : "loop",
			"sound" : [ "sounds/Imperium (slowed).mp3" ],
			"startsilent" : false,
			"volume" : 0.69999999
		}
	],
	"version" : 3
}